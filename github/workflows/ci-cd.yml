jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Log in to Amazon ECR
      id: login-ecr
      run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URI }}

    - name: Build and push Docker image
      run: |
        docker build -t my-web-app .
        docker tag my-web-app ${{ secrets.ECR_REPOSITORY_URI }}:latest
        docker push ${{ secrets.ECR_REPOSITORY_URI }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to ECS
      id: deploy-ecs
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: my-web-task
        service: my-web-service
        cluster: my-web-cluster
        wait-for-service-stability: true

  test:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Integration Tests
      run: |
        curl -f http://<PUBLIC_DNS_OR_IP>:80  # Replace with your actual application URL
